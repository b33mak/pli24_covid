/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.io.FileWriter;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.sql.Date;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.TypedQuery;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Country;
import model.CountryDataForDiagram;
import model.Coviddata;

import services.DBManager;

public class JFrameViewDataTabular extends javax.swing.JFrame {

    private DBManager db;
    private List<Country> countries;

    // Για τα δεδομένα της επιλεγμένης χώρας
    String countryName;
    Double latitude, logtitude;
    List<java.sql.Date> country_deaths_dates = new ArrayList();
    List<Integer> country_deaths_qty = new ArrayList();
    List<Integer> country_deaths_proodqty = new ArrayList();

    List<java.sql.Date> country_recovered_dates = new ArrayList();
    List<Integer> country_recovered_qty = new ArrayList();
    List<Integer> country_recovered_proodqty = new ArrayList();

    List<java.sql.Date> country_confirmed_dates = new ArrayList();
    List<Integer> country_confirmed_qty = new ArrayList();
    List<Integer> country_confirmed_proodqty = new ArrayList();

    /**
     * Creates new form JFrameViewDataTabular
     */
    public JFrameViewDataTabular() {
        initComponents();
        db = new DBManager();
        countries = new ArrayList();

        if (db.getEm() == null) {
            JOptionPane.showMessageDialog(null, "Σφάλμα σύνδεσης με τον DB Server. Δοκιμάστε να τον ξεκινήσετε!", "Σύνδεση με ΒΔ", JOptionPane.ERROR_MESSAGE);
            this.dispose();
        }
        TypedQuery<Country> query_country = db.getEm().createNamedQuery("Country.findAll", Country.class);
        countries = query_country.getResultList();

        // Φόρτωση ονομάτων χωρών
        List<String> countriesNames = new ArrayList<>();
        for (int i = 0; i < countries.size(); i++) {
            countriesNames.add(countries.get(i).getName());
        }
        jListCountries.setListData(countriesNames.toArray(new String[0]));
        jListCountries.setSelectedIndex(0);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jTxtDateFrom = new javax.swing.JFormattedTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTxtDateTo = new javax.swing.JFormattedTextField();
        jButtonShowDiagram = new javax.swing.JButton();
        jButtonShowMap = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListCountries = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jButtonFilter = new javax.swing.JButton();
        jButtonDeleteCountryCoviddata = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Προβολή δεδομένων χωρών σε πίνακα");
        setLocation(new java.awt.Point(300, 300));
        setResizable(false);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Ημ/νία", "Ημερήσιο πλήθος", "Σωρευτικό πλήθος"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(jTable1);

        jTabbedPane1.addTab("Θάνατοι", jScrollPane2);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Ημ/νία", "Ημερήσιο πλήθος", "Σωρευτικό πλήθος"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(jTable2);

        jTabbedPane1.addTab("Ανάρρωσαν", jScrollPane3);

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Ημ/νία", "Ημερήσιο πλήθος", "Σωρευτικό πλήθος"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable3.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setViewportView(jTable3);

        jTabbedPane1.addTab("Κρούσματα", jScrollPane4);

        jTxtDateFrom.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("yyyy-MM-dd"))));
        jTxtDateFrom.setToolTipText("yyyy-MM-dd");
        jTxtDateFrom.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel2.setText("Ημ/νία από:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel3.setText("Ημ/νία εώς:");

        jTxtDateTo.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("yyyy-MM-dd"))));
        jTxtDateTo.setToolTipText("yyyy-MM-dd");

        jButtonShowDiagram.setText("Προβολή σε διάγραμμα");
        jButtonShowDiagram.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonShowDiagramActionPerformed(evt);
            }
        });

        jButtonShowMap.setText("Προβολή σε χάρτη");
        jButtonShowMap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonShowMapActionPerformed(evt);
            }
        });

        jListCountries.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jListCountries.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jListCountries.setSelectedIndices(new int[] {-1});
        jListCountries.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListCountriesValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jListCountries);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel1.setText("Επιλογή χώρας");

        jButtonFilter.setText("Φιλτράρισμα");
        jButtonFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFilterActionPerformed(evt);
            }
        });

        jButtonDeleteCountryCoviddata.setText("Διαγραφή δεδομένων");
        jButtonDeleteCountryCoviddata.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteCountryCoviddataActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTxtDateFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jTxtDateTo)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButtonDeleteCountryCoviddata, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonShowDiagram, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonShowMap, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonFilter, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTxtDateTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTxtDateFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonFilter)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonShowDiagram)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonShowMap)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonDeleteCountryCoviddata)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 524, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTabbedPane1))
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jListCountriesValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListCountriesValueChanged
        // TODO add your handling code here:
        //JOptionPane.showMessageDialog(null, "Επιλογή: " + jListCountries.getSelectedValue() + " " + jListCountries.getSelectedIndex(), "Επιλογή λίστας", JOptionPane.INFORMATION_MESSAGE);

        countryName = jListCountries.getSelectedValue();
        // Για αποτροπή μη επιλογής χώρας
        if (countryName==null){
            jListCountries.setSelectedIndex(0);
        }

        TypedQuery<Country> query_country = db.getEm().createNamedQuery("Country.findByName", Country.class);
        query_country.setParameter("name", countryName);
        Country country_data = query_country.getSingleResult(); // Εδώ φορτώνω τα data της επιλεγμένης χώρας

        country_deaths_dates.clear();
        country_deaths_qty.clear();
        country_deaths_proodqty.clear();

        country_recovered_dates.clear();
        country_recovered_qty.clear();
        country_recovered_proodqty.clear();

        country_confirmed_dates.clear();
        country_confirmed_qty.clear();
        country_confirmed_proodqty.clear();

        for (Coviddata cd : country_data.getCoviddataList()) {
            switch (cd.getDatakind()) {
                case 1: // Deaths
                    country_deaths_dates.add(new java.sql.Date(cd.getTrndate().getTime()));
                    country_deaths_qty.add(cd.getQty());
                    country_deaths_proodqty.add(cd.getProodqty());
                    break;
                case 2: // Recovered
                    country_recovered_dates.add(new java.sql.Date(cd.getTrndate().getTime()));
                    country_recovered_qty.add(cd.getQty());
                    country_recovered_proodqty.add(cd.getProodqty());
                    break;
                case 3: // Confirmed
                    country_confirmed_dates.add(new java.sql.Date(cd.getTrndate().getTime()));
                    country_confirmed_qty.add(cd.getQty());
                    country_confirmed_proodqty.add(cd.getProodqty());
                    break;
            } // END SWITCH
        } // END FOR
        
        // Κάποιες χώρες έχουν δεν έχουν δώσει κρούσματα που ανάρρωσαν ή έχουν δώσει συγκεντρωτικά (λχ ο Canada)
        if (country_deaths_dates.isEmpty()){
            country_deaths_dates.add(country_recovered_dates.get(0));
            country_deaths_qty.add(0);
            country_deaths_proodqty.add(0);
        }
        if (country_confirmed_dates.isEmpty()){
            country_confirmed_dates.add(country_recovered_dates.get(0));
            country_confirmed_qty.add(0);
            country_confirmed_proodqty.add(0);
        }
        if (country_recovered_dates.isEmpty()){
            country_recovered_dates.add(country_confirmed_dates.get(0));
            country_recovered_qty.add(0);
            country_recovered_proodqty.add(0);
        }

        // Πρώτη και τελευταία ημέρα δεδομένων μορφής java.sql.Date (yyyy-MM-dd)
//        System.out.println("DateFrom: " + country_deaths_dates.get(country_deaths_dates.size()-1) + ", Class: " + country_deaths_dates.get(country_deaths_dates.size()-1).getClass());
//        System.out.println("DateTo  : " + country_deaths_dates.get(0) + ", Class: " + country_deaths_dates.get(0).getClass());
        jTxtDateFrom.setValue(new java.sql.Date(Date.valueOf("2020-01-01").getTime()));
        jTxtDateTo.setValue(new java.sql.Date(new java.util.Date().getTime()));

        // Γέμισμα του πίνακα jTable1 με τα deaths data
        DefaultTableModel model1 = (DefaultTableModel) jTable1.getModel();
        model1.setRowCount(0);
        for (int i = 0; i < country_deaths_dates.size(); i++) {
            model1.addRow(new Object[]{country_deaths_dates.get(i), country_deaths_qty.get(i), country_deaths_proodqty.get(i)});
        }

        // Γέμισμα του πίνακα jTable2 με τα recovered data
        DefaultTableModel model2 = (DefaultTableModel) jTable2.getModel();
        model2.setRowCount(0);
        for (int i = 0; i < country_recovered_dates.size(); i++) {
            model2.addRow(new Object[]{country_recovered_dates.get(i), country_recovered_qty.get(i), country_recovered_proodqty.get(i)});
        }

        // Γέμισμα του πίνακα jTable3 με τα confirmed data        
        DefaultTableModel model3 = (DefaultTableModel) jTable3.getModel();
        model3.setRowCount(0);
        for (int i = 0; i < country_confirmed_dates.size(); i++) {
            model3.addRow(new Object[]{country_confirmed_dates.get(i), country_confirmed_qty.get(i), country_confirmed_proodqty.get(i)});
        }


    }//GEN-LAST:event_jListCountriesValueChanged

    private void jButtonFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFilterActionPerformed
        // Πλήκτρο φιλτραρίσματος με βάση τις ημερομηνίες
        //Date dateTo = (Date)jTxtDateTo.getValue();        // Ημ/νία ως (μέγιστη, λχ 2021-03-05)
        //Date dateFrom = (Date) jTxtDateFrom.getValue();    // Ημ/νία από (ελάχιστη, λχ 2020-01-22)

        // Μετατροπή java.util.Date σε java.sql.Date μορφή
        java.sql.Date sqlDateFrom = new java.sql.Date(((java.util.Date) jTxtDateFrom.getValue()).getTime());
        java.sql.Date sqlDateTo = new java.sql.Date(((java.util.Date) jTxtDateTo.getValue()).getTime());

        // Φιλτράρισμα με βάση τις ημερομηνίες:
        TypedQuery<Country> query_country = db.getEm().createNamedQuery("Country.findByName", Country.class);
        query_country.setParameter("name", countryName);
        Country country_data = query_country.getSingleResult(); // Εδώ φορτώνω τα data της επιλεγμένης χώρας

        country_deaths_dates.clear();
        country_deaths_qty.clear();
        country_deaths_proodqty.clear();

        country_recovered_dates.clear();
        country_recovered_qty.clear();
        country_recovered_proodqty.clear();

        country_confirmed_dates.clear();
        country_confirmed_qty.clear();
        country_confirmed_proodqty.clear();

        for (Coviddata cd : country_data.getCoviddataList()) {
            java.sql.Date sqlcdDate = new java.sql.Date(((java.util.Date) cd.getTrndate()).getTime());
            if (sqlcdDate.compareTo(sqlDateFrom) >= 0 && sqlcdDate.compareTo(sqlDateTo) <= 0) {
                switch (cd.getDatakind()) {
                    case 1: // Deaths
                        country_deaths_dates.add(new java.sql.Date(cd.getTrndate().getTime()));
                        country_deaths_qty.add(cd.getQty());
                        country_deaths_proodqty.add(cd.getProodqty());
                        break;
                    case 2: // Recovered
                        country_recovered_dates.add(new java.sql.Date(cd.getTrndate().getTime()));
                        country_recovered_qty.add(cd.getQty());
                        country_recovered_proodqty.add(cd.getProodqty());
                        break;
                    case 3: // Confirmed
                        country_confirmed_dates.add(new java.sql.Date(cd.getTrndate().getTime()));
                        country_confirmed_qty.add(cd.getQty());
                        country_confirmed_proodqty.add(cd.getProodqty());
                        break;
                } // END SWITCH
            }
        } // END FOR

        // Πρώτη και τελευταία ημέρα δεδομένων μορφής java.sql.Date (yyyy-MM-dd)
//        System.out.println("DateFrom: " + country_deaths_dates.get(country_deaths_dates.size()-1) + ", Class: " + country_deaths_dates.get(country_deaths_dates.size()-1).getClass());
//        System.out.println("DateTo  : " + country_deaths_dates.get(0) + ", Class: " + country_deaths_dates.get(0).getClass());
//        jTxtDateFrom.setValue(country_deaths_dates.get(country_deaths_dates.size() - 1));
//        jTxtDateTo.setValue(country_deaths_dates.get(0));
        jTxtDateFrom.setValue(new java.sql.Date(Date.valueOf("2020-01-01").getTime()));
        jTxtDateTo.setValue(new java.sql.Date(new java.util.Date().getTime()));

        // Γέμισμα του πίνακα jTable1 με τα deaths data
        DefaultTableModel model1 = (DefaultTableModel) jTable1.getModel();
        model1.setRowCount(0);
        for (int i = 0; i < country_deaths_dates.size(); i++) {
            model1.addRow(new Object[]{country_deaths_dates.get(i), country_deaths_qty.get(i), country_deaths_proodqty.get(i)});
        }

        // Γέμισμα του πίνακα jTable2 με τα recovered data
        DefaultTableModel model2 = (DefaultTableModel) jTable2.getModel();
        model2.setRowCount(0);
        for (int i = 0; i < country_recovered_dates.size(); i++) {
            model2.addRow(new Object[]{country_recovered_dates.get(i), country_recovered_qty.get(i), country_recovered_proodqty.get(i)});
        }

        // Γέμισμα του πίνακα jTable3 με τα confirmed data        
        DefaultTableModel model3 = (DefaultTableModel) jTable3.getModel();
        model3.setRowCount(0);
        for (int i = 0; i < country_confirmed_dates.size(); i++) {
            model3.addRow(new Object[]{country_confirmed_dates.get(i), country_confirmed_qty.get(i), country_confirmed_proodqty.get(i)});
        }


    }//GEN-LAST:event_jButtonFilterActionPerformed

    private void jButtonDeleteCountryCoviddataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteCountryCoviddataActionPerformed
        // Διαγραφή των δεδομένων της επιλεγμένης χώρας       
        Object[] options = {"Ναι", "Όχι", "Άκυρο"};
        int choice = JOptionPane.showOptionDialog(null, "Σίγουρα επιθυμείτε τη διαγραφή των δεδομένων της χώρας " + countryName + ";", "Διαγραφή δεδομένων χώρας",
                JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, options[1]);
        if (choice == JOptionPane.YES_OPTION) {
            TypedQuery<Country> query = db.getEm().createNamedQuery("Country.findByName", Country.class);
            query.setParameter("name", countryName);
            Country country = query.getResultList().get(0);
            int deleted_data = country.getCoviddataList().size();

            db.getEm().getTransaction().begin();
            country.getCoviddataList().clear();
            db.getEm().persist(country);
            db.getEm().getTransaction().commit();

            if (deleted_data >= 0) {
                JOptionPane.showMessageDialog(null, "Διαγράφηκαν " + deleted_data + " εγγραφές από τη χώρα " + countryName, "Διαγραφή δεδομένων", JOptionPane.INFORMATION_MESSAGE);
                ((DefaultTableModel) jTable1.getModel()).setRowCount(0);
                ((DefaultTableModel) jTable2.getModel()).setRowCount(0);
                ((DefaultTableModel) jTable3.getModel()).setRowCount(0);
            } else {
                System.out.println("Δεν υπάρχει σύνδεση με τον DB Server");
                JOptionPane.showMessageDialog(null, "Δεν υπάρχει σύνδεση με τον DB Server", "Διαγραφή δεδομένων", JOptionPane.ERROR_MESSAGE);
            }

        }
    }//GEN-LAST:event_jButtonDeleteCountryCoviddataActionPerformed

    private void jButtonShowMapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonShowMapActionPerformed

        String webpage = "src\\pli24_covid\\mappage.html";
        String webpage2 = "src\\pli24_covid\\mappage2.html";
        //String webpage = "mappage.html";

        TypedQuery<Country> query = db.getEm().createNamedQuery("Country.findByName", Country.class);
        query.setParameter("name", countryName);
        Country country = query.getResultList().get(0);

        String htmlString = "";
        try {
            htmlString = new String(Files.readAllBytes(Paths.get(webpage)));
        } catch (IOException ex) {
            Logger.getLogger(JFrameViewDataTabular.class.getName()).log(Level.SEVERE, null, ex);
        }
        String country_loc = "['" + countryName + ", Θάνατοι=" + country_deaths_proodqty.get(0) + ", Ανάρρωσαν=" + country_recovered_proodqty.get(0) + ", Κρούσματα=" + country_confirmed_proodqty.get(0) + "'," + country.getLat() + "," + country.getLong1() + ", 1]";
        htmlString = htmlString.replace("$locs", country_loc);

        FileWriter fw;
        try {
            fw = new FileWriter(webpage2);
            fw.write(htmlString);
            fw.close();
        } catch (IOException ex) {
            Logger.getLogger(JFrameViewDataTabular.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            Runtime.getRuntime().exec("cmd /c start " + webpage2);
        } catch (IOException ex) {
            Logger.getLogger(JFrameViewDataTabular.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButtonShowMapActionPerformed

    private void jButtonShowDiagramActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonShowDiagramActionPerformed
        // TODO add your handling code here:
        // Νέο παράθυρο με τα δεδομένα της χώρας σε μορφή γραφήματος
        CountryDataForDiagram countryDataForDiagram = new CountryDataForDiagram(countryName);
        countryDataForDiagram.setCountry_deaths_dates(country_deaths_dates);
        countryDataForDiagram.setCountry_deaths_proodqty(country_deaths_proodqty);
        countryDataForDiagram.setCountry_deaths_qty(country_deaths_qty);
        countryDataForDiagram.setCountry_recovered_dates(country_recovered_dates);
        countryDataForDiagram.setCountry_recovered_proodqty(country_recovered_proodqty);
        countryDataForDiagram.setCountry_recovered_qty(country_recovered_qty);
        countryDataForDiagram.setCountry_confirmed_dates(country_confirmed_dates);
        countryDataForDiagram.setCountry_confirmed_proodqty(country_confirmed_proodqty);
        countryDataForDiagram.setCountry_confirmed_qty(country_confirmed_qty);
        
        jFrameViewDataDiagram jCountryDataDiagram = new jFrameViewDataDiagram(countryDataForDiagram);
//        jCountryDataDiagram.setSize(800, 600);
//        jCountryDataDiagram.setLocationRelativeTo(null);
//        jCountryDataDiagram.setVisible(true);
        
    }//GEN-LAST:event_jButtonShowDiagramActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrameViewDataTabular.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrameViewDataTabular.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrameViewDataTabular.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameViewDataTabular.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrameViewDataTabular().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonDeleteCountryCoviddata;
    private javax.swing.JButton jButtonFilter;
    private javax.swing.JButton jButtonShowDiagram;
    private javax.swing.JButton jButtonShowMap;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JList<String> jListCountries;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JFormattedTextField jTxtDateFrom;
    private javax.swing.JFormattedTextField jTxtDateTo;
    // End of variables declaration//GEN-END:variables
}
