/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.io.FileWriter;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.TypedQuery;
import javax.swing.JOptionPane;
import model.Country;
import model.Coviddata;
import services.DBManager;

public class jFrameViewDataOnMap extends javax.swing.JFrame {

    private DBManager db;
    List<String> countriesNames;

    /**
     * Creates new form jFrameViewDataOnMap
     */
    public jFrameViewDataOnMap() {
        initComponents();

        db = new DBManager();
        List<Country> countries = new ArrayList();

        if (db.getEm() == null) {
            JOptionPane.showMessageDialog(null, "Σφάλμα σύνδεσης με τον DB Server. Δοκιμάστε να τον ξεκινήσετε!", "Σύνδεση με ΒΔ", JOptionPane.ERROR_MESSAGE);
            this.dispose();
        }
        TypedQuery<Country> query_country = db.getEm().createNamedQuery("Country.findAll", Country.class);
        countries = query_country.getResultList();

        // Εύρεση ονομάτων χωρών
        countriesNames = new ArrayList<>();
        for (int i = 0; i < countries.size(); i++) {
            countriesNames.add(countries.get(i).getName());
        }

        // Φόρτωση ονομάτων χωρών στο jListMainCountry
        jListMainCountry.setListData(countriesNames.toArray(new String[0]));
        jListMainCountry.setSelectedIndex(0);

//        // Φόρτωση ονομάτων χωρών στο jListOtherCountries
//        if (countriesNames.size() > 1) {
//            jListOtherCountries.setListData(countriesNames.subList(1, countriesNames.size()).toArray(new String[0]));
//            jListOtherCountries.setSelectedIndex(0);
//        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jListMainCountry = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListOtherCountries = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        jButtonShowCountriesOnMap = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Προβολή δεδομένων χωρών σε χάρτη");
        setLocation(new java.awt.Point(300, 300));
        setResizable(false);

        jListMainCountry.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jListMainCountry.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jListMainCountry.setSelectedIndices(new int[] {-1});
        jListMainCountry.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListMainCountryValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jListMainCountry);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel1.setText("Επιλογή λοιπών χωρών");

        jListOtherCountries.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jListOtherCountries.setSelectedIndices(new int[] {-1});
        jScrollPane2.setViewportView(jListOtherCountries);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel2.setText("Επιλογή βασικής χώρας");

        jButtonShowCountriesOnMap.setText("Προβολή σε χάρτη");
        jButtonShowCountriesOnMap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonShowCountriesOnMapActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButtonShowCountriesOnMap)
                .addGap(200, 200, 200))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 349, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addGap(20, 20, 20)
                .addComponent(jButtonShowCountriesOnMap)
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jListMainCountryValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListMainCountryValueChanged

        //int mainCountrySelectedId = jListMainCountry.getSelectedIndex();
        String mainCountrySelectedName = jListMainCountry.getSelectedValue();

        //JOptionPane.showMessageDialog(null, "mainCountryNameSelected: " + jListMainCountry.getSelectedValue() + ", mainCountrySelectedId: " + mainCountrySelectedId, "Info testing", JOptionPane.INFORMATION_MESSAGE);
        // Φόρτωση ονομάτων χωρών στο jListOtherCountries
        if (countriesNames.size() > 1) {
            List<String> countriesWithoutMainSelected = new ArrayList();
            for (String c : countriesNames) {
                if (!c.equals(mainCountrySelectedName)) {
                    countriesWithoutMainSelected.add(c);
                }
            }
            jListOtherCountries.setListData(countriesWithoutMainSelected.toArray(new String[0]));
            jListOtherCountries.setSelectedIndex(0);
        }

    }//GEN-LAST:event_jListMainCountryValueChanged

    private void jButtonShowCountriesOnMapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonShowCountriesOnMapActionPerformed
        String webpage = "src\\pli24_covid\\mappage.html";
        String webpage2 = "src\\pli24_covid\\mappage3.html";

        // Ποιες είναι οι επιλεγμένες χώρες
        String mainCountrySelected = jListMainCountry.getSelectedValue();
        List<String> otherCountriesSelected = jListOtherCountries.getSelectedValuesList();

        // Για την αποθήκευση δεδομένων των χωρών
        List<java.sql.Date> country_deaths_dates = new ArrayList();
        List<Integer> country_deaths_qty = new ArrayList();
        List<Integer> country_deaths_proodqty = new ArrayList();

        List<java.sql.Date> country_recovered_dates = new ArrayList();
        List<Integer> country_recovered_qty = new ArrayList();
        List<Integer> country_recovered_proodqty = new ArrayList();

        List<java.sql.Date> country_confirmed_dates = new ArrayList();
        List<Integer> country_confirmed_qty = new ArrayList();
        List<Integer> country_confirmed_proodqty = new ArrayList();

        // Αν δεν έχει επιλεγεί τουλάχιστον η βασική χώρα
        if (mainCountrySelected == null) {
            JOptionPane.showMessageDialog(null, "Θα πρέπει να επιλέξετε βασική χώρα για την προβολή των δεδομένων σε χάρτη!", "Προβολή δεδομένων χωρών σε χάρτη", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Αντλώ τα δεδομένα των επιλεγμένων χωρών
        // Κύρια χώρα
        TypedQuery<Country> query = db.getEm().createNamedQuery("Country.findByName", Country.class);
        query.setParameter("name", mainCountrySelected);
        Country country = query.getResultList().get(0);

        for (Coviddata cd : country.getCoviddataList()) {
            switch (cd.getDatakind()) {
                case 1: // Deaths
                    country_deaths_dates.add(new java.sql.Date(cd.getTrndate().getTime()));
                    country_deaths_qty.add(cd.getQty());
                    country_deaths_proodqty.add(cd.getProodqty());
                    break;
                case 2: // Recovered
                    country_recovered_dates.add(new java.sql.Date(cd.getTrndate().getTime()));
                    country_recovered_qty.add(cd.getQty());
                    country_recovered_proodqty.add(cd.getProodqty());
                    break;
                case 3: // Confirmed
                    country_confirmed_dates.add(new java.sql.Date(cd.getTrndate().getTime()));
                    country_confirmed_qty.add(cd.getQty());
                    country_confirmed_proodqty.add(cd.getProodqty());
                    break;
            } // END SWITCH
        } // END FOR

        // Κάποιες χώρες έχουν δεν έχουν δώσει κρούσματα που ανάρρωσαν ή έχουν δώσει συγκεντρωτικά (λχ ο Canada)
        if (country_deaths_dates.isEmpty()) {
            country_deaths_dates.add(country_recovered_dates.get(0));
            country_deaths_qty.add(0);
            country_deaths_proodqty.add(0);
        }
        if (country_confirmed_dates.isEmpty()) {
            country_confirmed_dates.add(country_recovered_dates.get(0));
            country_confirmed_qty.add(0);
            country_confirmed_proodqty.add(0);
        }
        if (country_recovered_dates.isEmpty()) {
            country_recovered_dates.add(country_confirmed_dates.get(0));
            country_recovered_qty.add(0);
            country_recovered_proodqty.add(0);
        }

        // Προετοιμάζω το String για τον χάρτη
        String country_loc = "['" + mainCountrySelected + ", Θάνατοι=" + country_deaths_proodqty.get(0) + ", Ανάρρωσαν=" + country_recovered_proodqty.get(0) + ", Κρούσματα=" + country_confirmed_proodqty.get(0) + "'," + country.getLat() + "," + country.getLong1() + ", 1]";
        country_loc = country_loc + ",";

        // Για τις υπόλοιπες χώρες, επαναλαμβάνω την ίδια διαδικασία
        for (String otherCountry : otherCountriesSelected) {
            query = db.getEm().createNamedQuery("Country.findByName", Country.class);
            query.setParameter("name", otherCountry);
            country = query.getResultList().get(0);

            country_deaths_dates.clear();
            country_deaths_qty.clear();
            country_deaths_proodqty.clear();

            country_recovered_dates.clear();
            country_recovered_qty.clear();
            country_recovered_proodqty.clear();

            country_confirmed_dates.clear();
            country_confirmed_qty.clear();
            country_confirmed_proodqty.clear();

            for (Coviddata cd : country.getCoviddataList()) {
                switch (cd.getDatakind()) {
                    case 1: // Deaths
                        country_deaths_dates.add(new java.sql.Date(cd.getTrndate().getTime()));
                        country_deaths_qty.add(cd.getQty());
                        country_deaths_proodqty.add(cd.getProodqty());
                        break;
                    case 2: // Recovered
                        country_recovered_dates.add(new java.sql.Date(cd.getTrndate().getTime()));
                        country_recovered_qty.add(cd.getQty());
                        country_recovered_proodqty.add(cd.getProodqty());
                        break;
                    case 3: // Confirmed
                        country_confirmed_dates.add(new java.sql.Date(cd.getTrndate().getTime()));
                        country_confirmed_qty.add(cd.getQty());
                        country_confirmed_proodqty.add(cd.getProodqty());
                        break;
                } // END SWITCH
            } // END FOR
            // Κάποιες χώρες έχουν δεν έχουν δώσει κρούσματα που ανάρρωσαν ή έχουν δώσει συγκεντρωτικά (λχ ο Canada)
            if (country_deaths_dates.isEmpty()) {
                country_deaths_dates.add(country_recovered_dates.get(0));
                country_deaths_qty.add(0);
                country_deaths_proodqty.add(0);
            }
            if (country_confirmed_dates.isEmpty()) {
                country_confirmed_dates.add(country_recovered_dates.get(0));
                country_confirmed_qty.add(0);
                country_confirmed_proodqty.add(0);
            }
            if (country_recovered_dates.isEmpty()) {
                country_recovered_dates.add(country_confirmed_dates.get(0));
                country_recovered_qty.add(0);
                country_recovered_proodqty.add(0);
            }

            // Προσθέτω στο string για τον χάρτη
            country_loc = country_loc + "['" + otherCountry + ", Θάνατοι=" + country_deaths_proodqty.get(0) + ", Ανάρρωσαν=" + country_recovered_proodqty.get(0) + ", Κρούσματα=" + country_confirmed_proodqty.get(0) + "'," + country.getLat() + "," + country.getLong1() + ", 1]";
            country_loc = country_loc + ",";
        }
        // Από το string για τον χάρτη, θα πρέπει να αφαιρέσω το τελευταίο κόμμα ,
        country_loc = country_loc.substring(0, country_loc.length() - 1);

        // Θα διαβάσουμε την πρότυπη ιστοσελίδα και αφού αντικαταστήσουμε το $locs με το string country_loc θα αποθηκεύσουμε σε αρχείο
        String htmlString = "";
        try {
            htmlString = new String(Files.readAllBytes(Paths.get(webpage)));
        } catch (IOException ex) {
            Logger.getLogger(JFrameViewDataTabular.class.getName()).log(Level.SEVERE, null, ex);
        }

        htmlString = htmlString.replace("$locs", country_loc);

        FileWriter fw;
        try {
            fw = new FileWriter(webpage2);
            fw.write(htmlString);
            fw.close();
        } catch (IOException ex) {
            Logger.getLogger(JFrameViewDataTabular.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            Runtime.getRuntime().exec("cmd /c start " + webpage2);
        } catch (IOException ex) {
            Logger.getLogger(JFrameViewDataTabular.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonShowCountriesOnMapActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jFrameViewDataOnMap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jFrameViewDataOnMap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jFrameViewDataOnMap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jFrameViewDataOnMap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new jFrameViewDataOnMap().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonShowCountriesOnMap;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JList<String> jListMainCountry;
    private javax.swing.JList<String> jListOtherCountries;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables

}
